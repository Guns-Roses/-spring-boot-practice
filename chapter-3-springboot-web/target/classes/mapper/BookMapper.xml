<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="demo.springboot.mapper.BookMapper" >
    <resultMap id="BaseResultMap" type="demo.springboot.model.Book" >
        <id column="id" property="id" jdbcType="INTEGER" />
        <result column="name" property="name" jdbcType="VARCHAR" />
        <result column="writer" property="writer" jdbcType="VARCHAR" />
        <result column="introduction" property="introduction" jdbcType="VARCHAR" />
   </resultMap>

    <sql id="Base_Column_List">
    id, 'name', writer,introduction
    </sql>

    <select id="getBookList" resultMap="BaseResultMap">
        select id,'name',writer,introduction
        from
        book
    </select>

    <select id="getBookInfo" parameterType="java.lang.String" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from
            book
        where
            name = #{name,jdbcType=VARCHAR}
    </select>

    <insert id="addBook" parameterType="demo.springboot.model.Book"  keyProperty="id">
        insert into
         book (id,name,writer,introduction)
         VALUES (#{id},#{name}, #{writer}, #{introduction})
    </insert>

    <update id="updateBook" parameterType="demo.springboot.model.Book" keyProperty="id">
        update book
            <set>
            <if test="name != null">name = #{name},</if>
            <if test="writer != null">writer = #{writer},</if>
            <if test="introduction != null">introduction = #{introduction}</if>
            </set>
            WHERE id = #{id}
    </update>

    <delete id="delBook">
        delete
            from book
            where id = #{id}
    </delete>
</mapper>
